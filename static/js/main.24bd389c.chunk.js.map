{"version":3,"sources":["App.js","index.js"],"names":["App","useState","valorTela","setValorTela","resultado","setResultado","acumulador","setAcumulador","operado","setOperado","sinal","setSinal","Tela","valor","res","style","cssTela","cssTelaOper","cssTelaRes","Btn","label","onClick","isActive","setActive","cssBtnPressed","cssBtn","setTimeout","BtnE","cssBtnEqualPressed","cssBtnEqual","addDigitoTela","d","console","log","limparMemoria","operacao","oper","vTela","substring","length","r","eval","cssContainer","display","justifyContent","alignItems","flexDirection","width","backgroundColor","border","borderRadius","cssBotoes","flexWrap","margin","padding","paddingLeft","paddingRight","color","fontSize","height","paddingTop","boxShadow","outline","textAlign","class","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.24bd389c.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nexport default function App(){\r\n        const [valorTela, setValorTela] = useState('')\r\n        const [resultado, setResultado] = useState(0)\r\n        const [acumulador, setAcumulador] = useState(0)\r\n        const [operado, setOperado] = useState(false)\r\n        const [sinal, setSinal] = useState(false)\r\n\r\n\r\n\r\n        //COMPONENTES\r\n\r\n\r\n\r\n        const Tela=(valor, res)=>{\r\n                return(\r\n                    <div style={cssTela}>\r\n                        <span style={cssTelaOper}>{valor}</span>\r\n                        <span style={cssTelaRes}>{res}</span>\r\n                    </div>\r\n                )\r\n        }\r\n        const Btn=(label,onClick )=>{\r\n            const [isActive, setActive] = useState(false)\r\n\r\n            const toggleClass = () => {\r\n                setActive(!isActive);\r\n                onClick();\r\n                setTimeout(function(){  setActive(!isActive); }, 10);\r\n                setTimeout(function(){  setActive(isActive); }, 150);\r\n              }; \r\n             \r\n\r\n            return(\r\n                <button style={isActive ? cssBtnPressed: cssBtn } onClick={toggleClass}>\r\n                  {label}\r\n                </button>\r\n            )\r\n        }\r\n\r\n\r\n        const BtnE=(label,onClick )=>{\r\n            const [isActive, setActive] = useState(false)\r\n\r\n            const toggleClass = () => {\r\n                setActive(!isActive);\r\n                onClick();\r\n                setTimeout(function(){  setActive(!isActive); }, 10);\r\n                setTimeout(function(){  setActive(isActive); }, 150);\r\n              }; \r\n             \r\n\r\n            return(\r\n                <button style={isActive ? cssBtnEqualPressed: cssBtnEqual } onClick={toggleClass}>\r\n                  {label}\r\n                </button>\r\n            )\r\n        }\r\n     \r\n        \r\n\r\n        //FUNCOES\r\n\r\n        \r\n        const addDigitoTela = (d) =>{\r\n            if(( d == '+' || d == '-' || d =='*' || d == '/') && operado ){\r\n                console.log(\"+-*/\")\r\n                setOperado(false)\r\n                setValorTela(resultado+d)\r\n                \r\n                return\r\n\r\n            }\r\n\r\n            if(operado && !sinal ){\r\n                setValorTela(d)\r\n                setOperado(false)\r\n                setSinal(true)\r\n                return\r\n            }\r\n            \r\n            const valordigitadonatela = valorTela+d\r\n\r\n            setValorTela(valordigitadonatela)\r\n        }\r\n\r\n        const limparMemoria=()=>{\r\n            setOperado(false)\r\n            setValorTela('')\r\n            setResultado(0)\r\n            setAcumulador(0)\r\n            \r\n            return\r\n        }\r\n\r\n        const operacao=(oper)=>{\r\n            if(oper == 'bs'){\r\n                let vTela = valorTela\r\n                vTela = vTela.substring(0,(vTela.length-1))\r\n                setValorTela(vTela)\r\n                setOperado(false)\r\n                return\r\n            }\r\n            try{\r\n                if(valorTela != ''){\r\n                    const r=eval(valorTela) //calculo\r\n                    setAcumulador(r)\r\n                    setResultado(r)\r\n                    setOperado(true)\r\n                }\r\n                \r\n            }catch{\r\n                setResultado('Error')\r\n            }\r\n            \r\n        }\r\n\r\n        \r\n\r\n\r\n        //ESTILOS\r\n\r\n        const cssContainer={\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            width: '340px',\r\n            backgroundColor: '#292929',\r\n            border: 'none',\r\n            borderRadius: '30px ',\r\n            \r\n           \r\n\r\n        }\r\n\r\n        const cssBotoes={\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            margin: '20px 8px',\r\n            padding: '5px 0px'\r\n        }\r\n\r\n        const cssTela={\r\n            display: 'flex',\r\n            \r\n            paddingLeft:20,\r\n            paddingRight:20,\r\n            justifyContent:'center',\r\n            alignItems:'flex-end',\r\n            backgroundColor: '#000',\r\n            flexDirection: 'column',\r\n            width: '300px',\r\n            borderRadius: '30px 30px 0px 0px',\r\n        }\r\n        const cssTelaOper={\r\n            color:'#fff',\r\n            fontSize:25,\r\n            height: 20,\r\n            paddingTop: 80,\r\n            borderRadius: '15px',\r\n        }\r\n        const cssTelaRes={\r\n            color:'#fff',\r\n            fontSize:50,\r\n            borderRadius: '30px 30px 0px 0px'\r\n        }\r\n\r\n        const cssBtn={\r\n            fontSize:30,\r\n            height:  70.31,\r\n            width:  70.31,\r\n            padding: 20,\r\n            backgroundColor: '#1A1A1A',\r\n            boxShadow:'-4px -4px 12px rgba(49, 49, 49, 0.5), 4px 4px 12px #000000',\r\n            color: '#E6E6E6',\r\n            outline: 'none',\r\n            border:'none',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '50%',\r\n            margin:5\r\n        }\r\n        const cssBtnPressed={\r\n            fontSize:30,\r\n            height:  70.31,\r\n            width:  70.31,\r\n            padding: 20,\r\n            backgroundColor: '#0A0A0A',\r\n            boxShadow:'-4px -4px 12px rgba(49, 49, 49, 0.5), 4px 4px 12px #000000',\r\n            color: '#E6E6E6',\r\n            outline: 'none',\r\n            border:'none',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '50%',\r\n            margin:5\r\n        }\r\n        const cssBtnEqual={\r\n            fontSize:30,\r\n            height:  70.31,\r\n            width:  70.31,\r\n            padding: 20,\r\n            backgroundColor: '#FBD928',\r\n            boxShadow:'-4px -4px 12px rgba(49, 49, 49, 0.5), 4px 4px 12px #000000',\r\n            color: '#000',\r\n            border:'none',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '50%',\r\n            margin:5\r\n        }\r\n        const cssBtnEqualPressed={\r\n            fontSize:30,\r\n            height:  70.31,\r\n            width:  70.31,\r\n            padding: 20,\r\n            backgroundColor: '#FBD71E',\r\n            boxShadow:'inset 4px 4px 12px rgba(221, 145, 30, 0.5), inset -4px -4px 12px #FFE15A',\r\n            color: '#000',\r\n            border:'none',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '50%',\r\n            margin:5\r\n        }\r\n\r\n    return(\r\n        <>\r\n          <div style={cssContainer}>\r\n                {Tela(valorTela, resultado)}\r\n                <div style={cssBotoes}>\r\n                    {Btn('C',limparMemoria)}\r\n                    {Btn('(', ()=> addDigitoTela(\"(\")) }\r\n                    {Btn(')', ()=> addDigitoTela(\")\")) }\r\n                    {Btn('/', ()=> addDigitoTela(\"/\")) }\r\n                    {Btn('7', ()=> addDigitoTela(\"7\")) }\r\n                    {Btn('8', ()=> addDigitoTela(\"8\")) }\r\n                    {Btn('9', ()=> addDigitoTela(\"9\")) }\r\n                    {Btn('*', ()=> addDigitoTela(\"*\")) }\r\n                    {Btn('4', ()=> addDigitoTela(\"4\")) }\r\n                    {Btn('5', ()=> addDigitoTela(\"5\")) }\r\n                    {Btn('6', ()=> addDigitoTela(\"6\")) }\r\n                    {Btn('-', ()=> addDigitoTela(\"-\")) }\r\n                    {Btn('1', ()=> addDigitoTela(\"1\")) }\r\n                    {Btn('2', ()=> addDigitoTela(\"2\")) }\r\n                    {Btn('3', ()=> addDigitoTela(\"3\")) }\r\n                    {Btn('+', ()=> addDigitoTela(\"+\")) }\r\n                    {Btn('0', ()=> addDigitoTela(\"0\")) }\r\n                    {Btn('.', ()=> addDigitoTela(\".\")) }\r\n                    {Btn(<i class=\"fas fa-backspace\"></i>, ()=>operacao('bs')) }\r\n                    {BtnE('=', ()=> operacao('='))}\r\n\r\n\r\n\r\n                </div>\r\n          </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement =  document.getElementById(\"root\")\r\nReactDOM.render(<App/>, rootElement)"],"sourceRoot":""}